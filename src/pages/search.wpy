<template>
  <view class="container">
    <view wx:if="{{list.length>0}}">
      <!--矩阵商品列表模块-->
      <shopGridList :purchasetype.sync="purchasetype" :list.sync="list"></shopGridList>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import api from '@/api/api';
  import tip from '@/utils/tip'
  import {
    SYSTEM_INFO,
    USER_SPECICAL_INFO
  } from '@/utils/constant';

  import ShopGridList from '@/components/shop_grid_list'
  export default class Search extends wepy.page {
    config = {
      navigationBarTitleText: '搜索',
    }
    components = {
      shopGridList: ShopGridList,
    }
    data = {
      list: [],
      purchasetype: 1,
      //当前页面
      currentPage: 1,
      //总页数
      page_total: 0,
      keyword: "",
      cateCode: "",
      title: ""
    }

    setTitle(title) {
      wepy.setNavigationBarTitle({
        title: title
      })
    }
    onLoad(option) {
      this.list = [];
      this.cateCode = option.cateCode;
      if (this.cateCode != undefined && this.cateCode.length > 0) { //分类进入

        this.doSearchGoods(this.cateCode);
        this.title = "" + option.title;
        this.setTitle("" + option.title);
      } 
    }

    async doSearchGoods(keyword, currentPage, size) {
      let that = this;
      const json = await api.getGoodsList({
        query: {
          page: currentPage || 1,
          size: size || 10,
          searchKeyWords: this.keyword,
          cateCode: this.cateCode || ""
        }
      });
      if (json.data.code == 0) {
        that.list = [...that.list, ...json.data.list];
        that.page_total = json.data.page_total;

      } else {
        tip.error(json.data.msg);
      }
      that.$apply();
      if (keyword.length > 0) {
        let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
        let openId = userSpecialInfo.openid;
        const resultJson = await api.addSearchKeyword({
          query: {
            openId: openId,
            keyword: keyword
          }
        });
      }
    }
   
    methods = {
     
      onShareAppMessage: function(res) {
        if (res.from === 'button') {
          // 来自页面内转发按钮
          console.log(res.target)
        }
        return {
          title: this.detail.name,
          path: '/pages/search?cateCode=' + this.cateCode + '&title=' + this.title,
          success: function(res) {
            // 转发成功
          },
          fail: function(res) {
            // 转发失败
          }
        }
      }
    }
    //加载更多
    onReachBottom() {
      let that = this;
      console.log(that.page_total + "===" + that.currentPage);
      //判断总页数是否大于翻页数
      if ((that.page_total) > that.currentPage) {
        //防止重复加载
        if (that.preventRepeatReuqest) {
          return true;
        }
        that.preventRepeatReuqest = true;
        that.currentPage++;
        that.doSearchGoods("", that.currentPage);
        that.preventRepeatReuqest = false;
      }
    };
  }
</script>

<style lang="less">
  .history {
    padding: 20px 27px;
  }
  .doc {
    color: #999;
    font-size: 26rpx;
  }
  .lable {
    margin-top: 20rpx;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    margin-left: -20rpx;
    .child {
      background: #dedede;
      padding: 10rpx 20rpx;
      border-radius: 300rpx;
      margin-left: 20rpx;
      font-size: 26rpx;
      margin-top: 5rpx;
      color: #000;
    }
  }
  .btn_box {
    width: 377rpx;
    margin: 0 auto;
    padding-top: 88rpx;
    .button {
      color: #999;
    }
  }
  .active {
    border: 1px solid #f23737;
    color: #f23737;
  }
</style>
